0326 공부

클래스

실행용
ㄴmain메서드, 프로그램에 1개만 있으면 된더
참조용 클래스
ㄴ우리가 만들려는 객체의 상태와 기능을 정의

상태(필드 == 멤버변수)
기능(매서드)
static
모든 객체가 공통된 값을  가질 수 있게 해준다
정적변수

정적함수

클래스의 로딩
자바의 클래스들이 언제 어디서 메모리에 올라가고 클래스 멤버들이 초기화 되는 방법

setter&getter
-지금까지 객체의 필드를 객체의 내부뿐만 아니라 객체 밖에서도 마음껏 사용할 수 있었고, 마음대로 값을 바꿀수도 있었다.

setter
-외부에서 메서드를 통해 데이터에 접근하고 검증할 수 있도록 유도하는 메서드의 개념

-일반적으로 setter메서드를 사용할 때는, 필드의 값을 객체 외부에서 직접 넣지 못하도록 필드에 접근을 제한한다.
-필드가 선언되어 있는 클래스에서만 접근이 가능하도록 private 접근제한자를 붙힌다.

getter
-private 필드를 객체 외부에서 값을 불러오기 위해 구현하는 메서드를 getter라고한다.
-private 필드는 객체 외부에서는 접근이 불가능하지만, 필드가 선언된 클래스에서는 어디서든 접근이 가능하다.
-따라서 메서드를 통해서 값을 전달해 줄 수 있다.

생성자
-생성자는 반환값이 없지만, 반환 타입을 아예 작성하지 않는다.(void로도 적지 않는다.)
-생성자는 초기화를 위한 데이터를 인수로 전달받을 수 있다.

오버로딩 규칙
-매개변수의 개수가 다를 때
-매개변수의 개수가 같아도 자료형이 다를 때
-생성자나 메서드의 이름은 그대로 사용해야 한다.

this와 this()
-객체 자기 자신 스스로 참조
-this 참조 변수는 객체가 자기 자신을 참조하는데 사용하는 변수이다.
-this를 필드에 붙여서 사용하면, 중괄호{}안에서도 같은 이름의 매개변수와 필드를 구분해서 사용할 수 있다.
this.필드 = 매개변수명;

this
-객체 자기 자신 스스로 참조
-this 참조 변수는 객체가 자기 자신을 참조하는데 사용하는 변수이다.
-this를 필드에 붙여서 사용하면, 중괄호{}안에서도 같은 이름의 매개변수와 필드를 구분해서 사용할 수 있다.
this.필드 = 매개변수명;


//자바에서는 외부에서 제공할 수 있는 데이터만큼만 매개변수로전달하여
	//객체를 생성할 수 있다
	//생성자를 다양한 형태로 선언한느 것을 생성자 오버로딩이라고한다
	
	//오버로딩 규칙
	//1. 매개변수의 개수가 다를 때
	//2. 매개변수의 개수가 같아도 자료형이 다를 때
	//3. 생성사자 매서드의 이름은 그대로 사용하기

상속
-상속이란 우리가 일반적으로 알고있는 의미와 비슷하다.
-부모가 자식에게 무언가를 물려주는 것을 상속이라고 부르는 것처럼, 자바에서도 부모 역할을 하는 클래스가
-자식 역할을 하는 클래스에게 클래스 멤버와 메서드를 물려주는것을 상속이라고 한다
-상속은 클래스를 재사용하기 때문에 중복을 줄여주고 수정을 최소화하는 특징을 가지고 있다.

ㄴ상속해주는 클래스를 부모클래스, 상위클래스, 기반클래스 라고한다.
ㄴ상속받는 클래스를 자식클래스, 하위클래스, 파생클래스 라고한다.

//extends 키워드를 사용해야 자식관계가 성립이 된다.
자식클래스 extends 부모 클래스

상속관계가 성립이 되면
자식객체가 만들어졌을 때 부모의 필드나 메서드를 사용할 수 있다

자식의 생성자가 호출될 때 부모의 생성자가 먼저 호출되기 때문이다.

this -> 객체 자기 자신을 참조하는ㄴ 변수
super -> 부모를 참조하는 변수

부모의 생성자가 매개변수를 가진다면
Parent(String name, int age){
this.name = name;
this.age;
}

Child(String name, int age){
super(name, age); -> 부모생성자의 호출
}

오버라이드(override)
부모에 정의된 메서드를 자식클래스가 재정의하는것
오버라이드 규칙
1. 부모클래스의 메서드명, 반환타입, 매개변수가 동일해아 한다
2.부모클래스의 메서드보다 접근 제한 범위를 줄일 수 있다.





















