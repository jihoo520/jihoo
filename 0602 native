리액트 네이티브에서는 화면이동을 지원하지 않는다
그래서 외부라이브러리가 필요하다

npm install @react-navigation/native
리액트 네이티브에서 가장 많이 쓰이는 React Navigation라이브러이의 핵심 패키지이다

스택, 탭, 드로어 같은 화면 전환 네비게이션 기증을 제공하는데 여기서 네비게이션 컨텍스트와
네비게에션상태를 관리하는 기능을 담당
ㄴNavigationContainer
네비게이션 최상단에 있어야 하는 컴포넌트
네비게이션이 동작하려면 이 컴포넌트로 감싸야된다



스택 네비게이터
npm install @react-navigation/stack
리액트 네이티브에서 Stack Navigation를 구현할 수 있게 해주는 페키지
1.createStackNavigator()
스택 네비게이터를 생성하는 함수
반환되는 객체 안에 Navigator, Screen 컴포넌트를 포함하고 있다

Stack.Navigator
스택 네비게이션을 설정하는 컴포넌트, 여러 개의 Screen컴포넌트를 포함할 수 있다
ㄴscreenOptions: Navigator가 감싸고 있는 모든 스크린에 대해 설정을 적용

Stack.screen
스택 안에 들어가는 하나의 화면
ㄴ이름과 컴포넌트를 지정
ㄴoptions: 해당 스크린에만 설정을 적용

usenavigation()
현재 스크린의 navigation객체 얻어와서 화면 이동같은 네비게이션 기능을 사용할 수 있게 해준다
이 navigation 객체는 원래 스크린 컴포넌트에 props로 자동 전달이 되지만 컴포넌트가 스크린이 아니거나
더 깊은 하위 컴포넌트에서는 props로 바로 받을 수 가 없다


탭 네베게이터
npm install @react-navigation/bottom-tabs
리액트 네이티브에서 하단 탭 네비게이션을 만들기 위해 사용하는 라이브러리이다

인스타그램 하단 탭
유튜브 하단 탭
카카오톡 하단 탭

DrawerContentScrollView
드로어에 들어가는 내용을 스크롤 할 수있게 해주는 컴포넌트
안에 들어가는 모든 내용은 이 ScrollView 안에 있어야 드로어가 길어졌을 때 스크롤이 가능하다

DrawerItemList
Drawer.Navigation에 등록된 스크린들을 자동으로 메뉴 항목으로 만들어주는 컴포넌트 

구현할 기능
로그인/회원가입: 이메일과 비밀번호를 이용한 로그인과 회원가입
프로필: 나의 정보 확인 및 변경
채널 생성: 채널 생성 기능
채널 목록: 생성된 채널들의 목록 조회
채널: 실기간으로 메시지를 송수신하는 공간

네비케이션 라이브러리 설치

프로젝트를 진행하면서 필요한 라이브러리를 사용해볼 예정이다

expo-image-picker
기기의 사진이나 영상을 가져올 수 있도록 시스템 UI에 접근할 수 있는 기능을 제공한다

moment
시간을 다양한 형태로 변경하는 등 시간과 관련된 많은 기능을 제공하는 라이브러리로, 날짜와 관련된 라이브러리 중 가장
널리 알려지고 있고 많이 사용되고 있다

타임스탬프를 사용자가 보기 편한 형태로 변경하기 위해 사용할 예정이다

react-native-gifted-chat
메시지를 주고받는 채팅화면을 쉽게 구현할 수 있도록 돕는 라이브러리

파이어베이스
구글에서 제공하는 클라우드 기반 개발 플랫폼으로, 서버리스 어플리케이션을 쉽게 개발하고 배포할 수 있도록
다양한 백엔드 서비스를 제공한다
주로 모바일 앱과 웹 어플리케이션 개발에 사용되며, 실시간 데이터베이스 인증 클라우드 저장소
푸시 알림 등의 기능을 손 쉽게 구현할 수 있다

주요 기능과 서비스
1.Firebase Authentication
-다양한 인증 방식을 지원하여 사용자의 로그인과 회원가입을 간편하게 구현할 수 있다.
-이메일/비밀번호, 전화번호, 소셜 로그인(Google, Facebook, Twitter 등), 익명 인증 등을 제공한다.

2.Firebase Realtime Database
-클라우드 기반의 NoSQL 데이터베이스로, 데이터가 실시간으로 동기화된다.
-사용자가 데이터베이스의 업데이트를 즉시 받을 수 있어, 실시간 채팅, 
라이브 업데이트 기능 등을 구현할 때 유용하다.

3.Cloud Firestore
-확장성과 유연성을 갖춘 NoSQL 문서형 데이터베이스로, Realtime Database와 유사하지만 
더 강력하고 복잡한 쿼리를 지원한다.
-서버리스 아키텍처로, 데이터베이스를 서버에 배포하지 않고도 대규모 데이터베이스를 관리할 수 있다.

4.Firebase Storage
-이미지, 동영상, 파일 등을 저장하고 관리할 수 있는 클라우드 스토리지 서비스다.
-대용량 파일을 안전하게 저장하고, 업로드 및 다운로드 기능을 손쉽게 구현할 수 있다.

5.Firebase Cloud Messaging (FCM)
-푸시 알림을 전송할 수 있는 무료 메시징 서비스다.
-기기 간의 푸시 알림이나 주제별 메시지를 손쉽게 전송할 수 있어, 사용자에게 실시간 알림을 보낼 때 유용하다.

6.Firebase Hosting

-정적 웹사이트나 단일 페이지 애플리케이션(SPA)을 위한 빠르고 안전한 호스팅 서비스다.
-Firebase CLI를 통해 빠르게 배포할 수 있으며, SSL 인증서가 자동으로 적용되어 안전한 HTTPS 통신을 제공한다.

7.Firebase Analytics
-앱 사용자 행동을 분석하여 사용자 인터랙션에 대한 인사이트를 제공하는 분석 도구다.
-Google Analytics 기반으로, 실시간 사용자 정보, 사용자 속성, 이벤트 추적 등을 지원한다.

8.Firebase Cloud Functions
-서버리스 환경에서 백엔드 코드를 실행할 수 있는 기능이다.
-이벤트 기반으로 트리거되는 함수로, 데이터베이스 변경, 인증, FCM 등을 활용하여 백엔드 로직을 처리할 수 있다.

앱 아이콘과 로딩화면
-프로젝트의 기능과 화면 개발에 앞서 앱의 아이콘과 로딩 화면을 먼저 변경해보자.

npm install expo-splash-screen
앱이 실행될 때 사용자에게 보여지는 초기화면(스플래시 화면)을 관리하는 패키지

스프래시 화면: 앱을 켜면 뜨는 로딩화면

왜써야 할까
앱이 준비되기 전에 빈 화면이나 버벅이는 화면이 보이면 유저는 좋게 생각을 안한다
-앱이 필요한 리소스를 다 로드할 떄까지 기다렸다가 사용자에게 보여줄 수 있다

인증 화면
-파이어베이스의 인증 기능을 이용해서 로그인 화면과 회원가입 화면을 만들어보자.
-인증을 위해 이메일과 비밀번호가 필요하므로 로그인 및 회원가입 화면에서는 이메일과 비밀번호를 필수로 입력받고, 
회원가입 시 사용자가 서비스에서 사용할 이름과 프로필 사진을 받도록 화면을 구성하도록 하자.














































