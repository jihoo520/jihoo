# ReactNative

## 5. 21.(Wed) Day-1

## 리액트 네이티브

- 리액트 기반의 모바일 어플리케이션 개발 프레임워크
- JSX, 컴포넌트 기반
- 한 번만 작성하면 안드로이드, IOS 둘 다 확인 가능
- 프로젝트를 만들 때는 expo를 활용한다.
    - npm install -g expo-cli → expo 설치
    - expo init 프로젝트명
- CLI(Command-Line Interface)
    - 사용자가 컴퓨터에게 명령을 입력하여 상호작용 하는 방식
- JSX문법
    - 여러개의 태그는 반드시 하나로 묶어야 한다.
    - RN(ReactNative)은 div역할을 하는 View라는 컴포넌트가 있다.
    - Fragment 써도 된다.
    - if문 가능, 3항 연산자 가능
    - && : 앞의 조건이 참이면 뒤의 조건을 렌더링 한다.
    - || : 앞의 조건이 거짓이면 뒤의 조건을 렌더링 한다.
    - null과 undefined
        - 조건에 따라 출력하는 값을 변경하다 보면 컴포넌트가 null이나 undefined를 반환하는 경우가 있다.
    - JSX의 경우 NULL은 허용하지만 undefined는 오류가 발생한다.

### 스타일링

- 인라인 스타일링
    - JSX에서는 HTML과는 달리 style에 문자열로 입력하는 것이 아니라 객체 형태로 입력해야 한다.
    - 속성은 카멜 표현식으로 작성해야 한다.
- 컴포넌트
    - 재사용이 가능한 조립블록
    - ui의 조각
    - 컴포넌트는 단순히 UI의 역할만 하는 것이 아니라 부모로 부터 받은 속성(props)나 자신의 상태(state)에 따라 표현이 달라지고 다양한 기능을 수행한다.
    - 리액트 네이티브는 데이터와 UI요소의 집합체라고 할 수 있는 컴포넌트를 이용하여 화면을 구성한다.
- 특징
    - 독립적이다.
        - 컴포넌트는 다른 코드와 독립적으로 동작한다.
        - 한 곳에서 수정해도 다른 부분에 영향을 주지 않는다.
    - 재사용 가능
        - 한번 작성한 컴포넌트를 여러 곳에서 사용할 수 있다.
        - 예를 들어, 앱에서 같은 스타일의 버튼이 필요하다면 버튼 컴포넌트를 만들어 원하는 곳에서 재사용 할 수 있다.
- 유지보수가 용이하다.
    - 화면의 각 부분을 작은 컴포넌트로 분리하여 만들기 때문에 필요한 부분만 수정할 수 있다.
- 가독성 증가
    - 코드가 작게 나누어지기 때문에 이해하기 쉽고 코드 관리가 수월하다.
- 내장 컴포넌트
    - 리액트 네이티브에서는 다양한 내장 컴포넌트들이 제공된다.
- View와 Text
- View
    - 가장 기본적인 레이아웃 컴포넌트, HTML의 <div>와 유사한 역할을 한다.
    - 화면에 여러 요소를 그룹화 하거나 레이아웃을 구성할 때 사용된다.
- Text
    - 텍스트를 표시할 때 사용하는 컴포넌트
    - <p>, <span>과 비슷하며, ReactNative(RN)에서 텍스트를 표시할 때 필수적으로 사용된다.
- Button
    - RN에서 사용하는 버튼을 만들어주는 컴포넌트
    - 설정할 수 있는 속성들이 있다.
    - title : 버튼에 쓰이는 문구
    - onPress : 클릭 이벤트
    - color 속성
        - IOS에서는 텍스트의 색
        - 안드로이드에서는 버튼의 배경색을 나타내는 값
- ScrollView
    - 스크롤이 가능한 뷰를 만들 때 사용하는 컴포넌트
    - 화면에 보여질 내용이 길어질 때 유용하다.
- 커스텀 컴포넌트 만들기
    - RN에서 다양한 컴포넌트를 제공하고 있지만, 프로젝트를 진행하다보면 여러 컴포넌트를 조합해서 새로운 컴포넌트를 제작하여 사용하게 된다.
    - RN에서 제공하는 컴포넌트들을 이용해서 커스텀 컴포넌트를 만들어보자
    - Pressable과 Text 컴포넌트를 이용해서 MyButton컴포넌트를 만들어보자
- Pressable컴포넌트
    - 터치 이벤트에 대한 더 세부적인 제어를 제공하는 최신 터치 컴포넌트로, 다양한 상태와 조건을 다루기 위해 만들어졌다.
    - 터치 가능 영역을 정의하는 컴포넌트로, 사용자가 터치, 길게 누르기, 눌렀다 뗌 등의 여러 이벤트를 처리할 수 있다.
    - 각 이벤트에 따른 다양한 콜백 함수를 제공해 더 세밀하게 터치 상호작용을 제어할 수 있다.
- 주요 이벤트와 콜백 함수
- onPress : 눌렀다 뗐을 때 호출
- onPressIn : 누른 순간 호출
- onPressOut : 눌렀다 떼는 순간 호출
- onLongPress : 사용자가 지정된 시간 이상 길게 눌렀을 때 호출

## 5. 22.(Thu) Day-2

### 리액트 네이티브

- 원래는 안드로이드(Java, Kotlin)와 IOS(swift, Object-c)는 따로 개발을 해야 했다.
- 한번만 작성하면 안드로이드와 IOS 둘 다 작동을 한다.
- 리액트를 기반으로 작동한다.
- 그렇기 때문에 JSX, 컴포넌트를 사용하여 개발을 한다.
- 에뮬레이터를 활용해서 다양한 환경에서 테스트 해 볼 수 있다.
- Node : RN이 본질적으로 자바스크립트를 사용하므로, 패키지를 설치할 때 npm을 사용하고, 프로젝트 시작할 때 사용한다.
- Python : 직접적인 실행에는 필요가 없으나, 빌드를 할 때 보조적인 역할을 한다.
- expo : RN으로 모바일 앱을 더 쉽게 만들고 테스트 할 수 있도록 도와주는 도구
- 어플리케이션 실행
    - 복잡한 설정 생략
    - 앱 미리보기 제공 → 스마트폰에 expo go
    - 자주쓰는 기능을 기본으로 제공(카메라, 위치, 푸시알림 등)
    - 웹에서도 실행 가능
    - 단점
        - 네이티브 코드 직접 수정이 어려움
        - expo에서 지원하지 않는 기능은 eject(꺼내다)를 사용해서 개발을 해야 한다.
    - Expo가 못하는 기능이 필요할 때 사용
    - eject를 한번 하면 expo로 다시 못돌아간다.
    - expo 프로젝트 생성
        - npx expo 프로젝트명
- JSX를 잘 알아야 컴포넌트를 만들 수 있다.
- View
    - 레이아웃을 잡는 기본 컨테이터 역할(div 처럼 사용)
    - style 속성
- Text
    - 텍스트를 화면에 표시하는 컴포넌트
    - 글자를 Text에 안넣으면 화면에 안나온다.
- Button
    - 기본적인 버튼
    - 사용자가 누를 수 있는 버튼
    - title : 버튼에 쓰이는 문구
    - onPress : 눌렀을 때 이벤트 발생
    - color : 안드로이드(버튼의 배경색), IOS(글자색 변경)

text

텍스트를 화면에 표시하는 컴포넌트
글자를 text에 안넣으면 화면에 안나온다

Button - 기본적인 버튼
사용자가 누를 수 있는 버튼
title: 버튼에 쓰이는 문구
onPress: 눌렀을 때 이벤트 발생
color:안드(버튼의 배경색),ios(글자색 변경)

Pressable
사용자 정의 버튼
좀 더 유연하게 커스트마이징 가능

자식 컴포넌트로 데이터를 전달하는 방식
1.부모 컴포넌트에서 자식 컴포넌트를 사용하면서 속성으로
props를 전달하는 방법
2.컴포넌트의 태그 사이에 값을 입력해서 전달하는 방법

defaultProps
만약 사용해야 하는 값이 전달되지 않았다면 기본으로 사용되는 값

여러 사람과 함께 개발을 하다보면 내가 만든 컴포넌트를 다른 사람이 사용하는 경우가 많다
이런 상황에서 컴포넌트를 잘못 파악해 반드시 전달되어야 하는 중요한 값이
전달되지 않았을 때 기본값을 지정하면 만약의 사태에 빈 값이 나타나는

state
props는 부모 컴포넌트에서 받은 값을 변경할 수 없는 반면에
state는 컴포넌트 내부에서 생성되고 값을 변경할 수 있으며
이용해 컴포넌트 상태를 관리한다
상태란 컴포넌트에서 변화할 수 있는 값을 나타내며, 상태가 변하면 컴포넌트는 재렌더링이 일어난다

useState
리액트 Hook중 useState는 함수형 컴포넌트에서 상태를 관리할 수 있도록 해준다

const [변수, setter] = useState(초기값);

useState()를 실행하고나면 변수와, 변수의 값을 변경할 수 있는 함수를 배열로 반환한다
상태변수는 직접 변경하는 것이 아니라 useState에서 반환한 setter함수를 이용해야 한다
useState함수를 호출할 때 파라미터에서 생성되는 상태의 초기값을 전달할 수 있고, 초기값을 전달하지 않으면
underfined로 설정되어 에러가 발생할 수 있다.

이벤트 처리
RN에는 사용자의 행동에 따라 상호작용하는 이벤트를 다양하게 제공한다
많은 종류의 이벤트가 존재하고 컴포넌트가 하는 역할게 따라 제공되는 이벤트도 약산씩 차이가 있다

Press 이벤트
RN에서 onClick이벤트와 가장 비슷한 이벤트는 Press이벤트이다
버튼을 만들때 Pressanle 컴포넌트에서 설정할 수 있는 Press이벤트의 종류는 4가지이다

onPressln: 터치가 시잘될 때 호출
onPressOut: 터치가 해제될 때 호출
onPress: 터치가 해제될때 onPressOut이후에 호출
onLongPress: 터치가 일정 시간 지속되면 호출

버튼을 클릭하면
onPressln > onPress > onPressOut
꾹 누르고 있으면
onpressln > onLongPress > onPressOut

onPress나 onLongPress 사용자가 클릭하는 시간에 따라 둘중 하나만 호출이 된다
만약 onLongPress가 호출되는 시간을 조절하고 싶다면
delayLongPress 속성을 주면 된다

change 이벤트
변화를 감지하는change이벤트는 값을 입력하는 Textinput 컴포넌트에서 사용된다

onChangeText 컴포넌트의 텍스트가 변경되었을 때 변경된 텍스트의 문자열만 인수로 전달하여 호출된다

Pressable 컴포넌트
사용자의 터치에 상호작용학는 컴포넌트
우리는 모바일 환경에서 작은 화면에 버튼을 포함하여 다양한 요소들을 보여준다
화면이 작은만큼 버튼도 작아지는데 손가락이 크거나 두꺼운 
사람들은 버튼을 정확하게 클릭하는것이 어려울 수 있다
이러한 상황을 해결하기 위해 많은 개발자들이 버튼 모양보다 약간 떨어진 부분까지 이벤트가 발생할 수 있도록
조치하고 있다

Pressable 컴포넌트는 HitRect를 이용해 이러한 설정을 할 수 있다.

 pressRetentionOffset: 손가락이 움직였을 때도 버튼이 눌려진 상태를 유지하기 위한 범위

hitslop: 터치 기능 영역 확장

스타일링

1.인라인 스타일링
HTML의 인라인 스타일링 처럼 컴포넌트에 직접 스타일을 입력하는 방식이다
다만 HTMl에서는 문자열 형태로 스타일을 입력하지만, RN에서는 객체 형태로 전달해야 한다는 차이점이 있다

클래스 스타일링
-컴포넌트의 태그에 직접 입력하는 방식이 아니라 스타일시트에 정의된 스타일을 사용하는 방법
-웹에서 css클래스를 이용하는 방법과 유사하다
-모바일 환경에서 동작하기 때문에 웹 처럼 css 스타일을 작성하는 방식은 비효율적일 수 있다
-styleSheet를 사용하면 코드의 성능이 개선되고,  스타일을 체계적으로 관리할 수 있게 된다

StyleSheet.create메서드를 호출해 스타일을 정의한다
이 메서드를 통해 스타일을 객체 형태로 작성할 수 있다

외부 스타일 시트 이용하기
상황에 따라 외부 파일에 스타일을 정의 하고 여러 개의 파일에서 스타일을 공통으로 사용한느 경우가 있다

리액트 네이티브 스타일
-RN에는 많은 종류의 스타일 속성들이 있다
-그 중에는 특정 플랫폼에서만 적용되는 스타일도 있고, 웹 프로그래밍에서 사용해본 익숙한 속성들도 있다

RN 에서도 용소의 너비와 높이를 정할 때 width와 height를 설정할 수 있다
-Header와 Footer 컴포넌트의 높이를 80으로 하고 Contents 컴포넌트가 나머지 영역을 차지하도록 구성하고 싶으면
어떻게 해야 할까?

platform
앱이 실행되는 운영체제에 따라 다른 코들르 실행할 수 있게 도와주는 도구

1.Platform.OS
현재 실행중인 플랫폼을 알려주는 값이다

2.Platform.select
운영체제별로 서로 다른 값을 쉽게 설정할 수 있게 해준다

3.Platform.version
운영체제의 버전 번호를 가져오는 속성
이 값을 사용하면 ios나 Android버전에 따라 다른 코들르 실행할 수 있다

그림자 만들기
Platform을 이용하여 ios와 안드로이드 두 플랫폼에서 그림자를 만들어보자

styled-component
자바스크립트 파일 안에 스타일을 작성하는 CSS-in-JS라이브러리이며
스타일이 적용된 컴포넌트라고 생각하면 된다
























