React
컴포넌트를 기반으로 하는 자바스크립트 라이브러리
node가 설치되어있어야함 -> npm를 사용하려고 설치

npm init -> 폴더를 npm으로 초기화를 하겠다
여러가지 설정을 해줘야함
피키지 이름, 초기버전, 프로젝트 설명, 등등

package.json
프로젝트에 대한 메타데이터 정보가 들어가 있다

npm install react

npm install -> package.json을 읽어가지고 다운로드 받는다
npmjs.org로 요청을 보낸다
설치하려는 패키지의 메타데이터(버전, 의존성, 정보)를 조회
실제 압축된 파일을 내려받는다

npx create-react-app프로젝트명
기본적으로 필요한 파일들을 다 가진채로 시작을 한다

react는 index.html파일 하나만 가지고 있다
index.html은 <div id="root"></div> 요소를 하나만 가지고 있다

index.js에서 <div>요소를 react 의 루트요소로 만든다
render() 메서드를 이용해서 컴포넌트를 렌더링한다

컴포넌트를 만들 때는 함수로 만든다
컴포넌트 이름을 지을 때는 첫글자는 대문자로 만든다 

fucntion 컴포넌트명(props){
          기능
          return(
            html 인터페이스
          )
}

JSX문법
JavaScriptXML의 약자

Exam.js파일을 만들고
ShowHide() 컴포넌트를 만든다

버튼이 있다 숨기기 보이기
Hello, React
버튼을 누르면 위에 두 단어가 보였다 안보였다

컴포넌트는 App에서 호출해서 확인

스프레드 연산자
반복가능객체나 객체의 프로퍼티를 펼친다 라는 의미를 가진다
복사, 병합, 분해등의 작업을 간결하게 해주는 문법

배열에서의 사용법
const arr = [1,2,3;
const arr2 = [...arr]; //[1,2,3]이 복사됨
const arr3 = [...arr,4,5]// [1,2,3,4,5] 병합
const arr4 = [0, ...arr,4]//[0,12,3,4] 중간삽입

객체에서의 사용법
const obj1 = {x:1, y;2};
const obj2 = {...obj1} -> {X:1, y:2} 복사
const obj3 = {...obj1,z:3} -> {x:1, y:2, x:3} 병합
const obj4 = {...obj1, y:20} -> {x:1, y:20}

onChange: 사용자가 키보드를 입력하거나 붙여넣기, 드래그 앤 드롭등으로 값이 바뀔 때마다 실행
































