0408 공부

스레드의 생성
run()매서드를 오버라이딩

프로세스 -> 실행을 해서 메모리에 올라간 프로그램
프로세스는 최소 한 개의 스레드를 가지고 있다

main도 스레드를 가지고 있다

run()메서드를 직접 실행하지 않는다
일반적인 메서드의 역할밖에 하지 못한다

start()메서드로 run()메서드를 실행을 한다

Thread클래스의 메서드
getName(): 스레드의 이름을 가져온다
setName(): 스레드의 이름을 정한다
getstate(): 스레드의 상태를 반환한다
getPriority(): 우선순위를 반환

스레드의 상태

생성:NEW
대기:RUNNABLE
일시정지:WATING, TIMED_WAITING, BLOCKED

상태변화 메서드
sleep(long millis): 지정된 시간만큼 대기
join(): join()메서드를 호출한 스레드가 종료할 때까지 다른 스레드들은 대기

스레드의 기본 우선 순위는 5이다
스레드가 여러개일 때 생길 수 있는 문제점
변수는 하나인데 두 개 이상의 스레드가 동시에 변수의 값을 변경하려고 하다가
오류가 발생할 수도 있다

이처럼 특정 스레드들이 공유하는 한 개의 자원을 사용중일 떄
현재 자원을 사용중이지 않은 다른 스레드가 접근한지 모하게 하는것을 동기화라고 한다

main도 스레드임
스레드 -> 작업의 흐름
하나의 프로그램 안에서 여러 작엄을 동시에 실행할 수있게 해주는 기술

하나의 프로그램에는 최소 1개의 스레드가 있다

우리가 인위적으로 스레드를 생성하는 것이 가능
1. Thread클래슬르 상속받아서 생성
2.Runnable 인터페이스를 구현

메인 작업과 별개로 동시에 작업을 하고 싶은 내용을
run() 메서드 안에 작성을 한다

Runnable방식이 더 유연하고 실무에서도 많이 쓴다

스레드를 여러개 만들고 사용할 떼, 스레드가 공유하는 변수나 메서드에 접근을 하면 데이터 충돌 발생 가능성이 있다
하나의 스레드가 점유할 떄는 다른 스레드가 사용할 수 없는 동기화를 해야한다

프로세스 안에 스레드가 1개면 -> 싱글 스레드
프로세스 안에 스레드가 여러개 -> 멀티 스레드



























