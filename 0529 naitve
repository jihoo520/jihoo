0529

useState
useEffect
useRef
useMemo
커스텀훅

useReducer훅
복잡한 상태의 로직을 보다 체계적으로 관리하기 위해 사용하는 상태 관리 훅
리듀서라는 함수를 통해 상태를 업데이트하는 방식이며
Redux를 간소화 시킨 버전이라고 생각하면 된다

const [state,dispatch] = useReducer(reducer,initialState)

state:현재 상태의 값
dispatch: 상태를 바꾸기 위해 액션을 보내는 함수
reducer: 상태 업데이트 로직을 담은 함수
initialState: 초기 상태 값

언제 useReducer훅을 사용하면 좋은가
상태가 복잡하고 조건이 많음
여러 상태가 하나의 로직으로 연결됨
컴포넌트에서 상태 로직을 분리하고 싶음
컴포넌트에서 상태 로직을 분리하고 싶을 떄

네비게이션
-모바일 어플리케이션은 하나의 화면으로 구성되는 경우의 거의 없으며
일반적으로 다양한 화면이 상황에 맞게 전환되면서 나타난다
-그렇기 때문에 네비게이션은 모바일 어플리케이션에서 가장 중요한 기능 중 하나라고 할 수 있다

리액트 네비게이션
-리액트 내비게이션 라이브러리는 리액트 네이티브 어플리케이션의 네비게이션을 쉽고 간단하게
관리할 수 있도록 도와준다
-지원하는 네비게이션 종류는 Stack, Tab, Drawer 세 종류가 있다

네비게이션의 구조
리액트 네비케이션에는
-Navigation Container 컴포넌트
-Navigator 컴포넌트
-Screen 컴포넌트가 있다

Screen 컴포넌트
네비게이터안에서 각각의 화면을 정의하는데 사용되는 기본 단위
-Screen은 네비게이션 구조에서 이동할 수 있는 독립적인 화면을 의미하며 각Screen은 하나의 컴포넌트를 
가리킨다

속성
name: Screen 컴포넌트의 식별자가 된다. 이 이름 값을 통해 다른 화면에서 해당 화면으로
네비게이션 할 수 있다
component: Screen에 할당된 컴포넌트로, 이 속성에 지정된 컴포넌트가 화면에 렌더링된다

특징 
화면으로 사용되는 컴포넌트에는 항상 navigation과 route가 props로 전달된다는 특징이 있다

리액트 네이티브에서 특정 컴포넌트를 네비게이터에 Screen으로 등록하면
그 컴포넌트는 네비게이션에 의해 관리되는 화면 역할을 한다

스택 네비게이션
-가장 기본적인 네비게이션인 스택을 사용해보자
-스택 네비게이션은 일반적으로 가장 많이 사용되는 네비게이션이다
화면 위에 화면을 쌓으면서 이동하는 것이 특징이다
-예를 들어, 채팅 어플리케이션에서 채팅방에 입장하는 상황이나 여러 목록 중 특정 항목의
상세화면으로 이동할 때 사용된다
-스택 네비게이션은 화면 위에 새로운 화면을 쌓으면서(push) 이동하기 때문에 이전 화면을 계속 유지한다

화면의 이동
Screen 컴포넌트의 component로 지정된 컴포넌트는 화면을 이용이 되고 navigation이 props로 전달이 된다

navigation에는 다양한 기능이 있는데 그 중 navigation메서드는 원하는 화면으로 이동하는데 사용되는 함수


























